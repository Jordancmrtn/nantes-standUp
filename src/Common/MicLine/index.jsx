import { useEffect, useState } from 'react';

import style from './style.module.css'

const MicLine = () => {

    const [strokeDashoffset, setStrokeDashoffset] = useState(2208.09)
    const [strokeDasharray, setStrokeDasharray] = useState(2208.09)

    useEffect(() => {
        const test = () => {
            const path = document.querySelector('path')
            const pathLenght = path?.getTotalLength()

            setStrokeDasharray(pathLenght)

                //Get the % of the scroll in the page
                const scrollPercentage = (document.documentElement.scrollTop + document.body.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight)
    
                const drawLenght = pathLenght * scrollPercentage * 2
    
                const final = pathLenght - drawLenght 
                
                setStrokeDashoffset(final)

        }
        window.addEventListener("scroll", test);

        return () => window.removeEventListener("scroll", test);
    }, []);

    return ( 
        <div className={style.root}>
            <svg className={style.svg} viewBox="0 0 120 205" fill="none" preserveAspectRatio='xMidYMax meet'>
                <g filter="url(#filter0_d_2_7)">
                    <path style={{strokeDashoffset: strokeDashoffset, strokeDasharray: strokeDasharray}} d="M90.5 192C85.9253 180.397 83.6929 157.497 85.9253 155.281C88.1577 153.065 90.3902 130.904 91.8784 124.995C100.808 119.824 104.768 110.221 104.768 104.68C104.768 101.356 92.4893 105.05 92.4893 100.248C92.4893 96.9239 104.768 100.987 106.256 99.8785C107.744 98.7705 106.628 95.077 104.768 95.077C102.907 95.077 93.2335 95.4464 93.2335 92.1222C93.2335 88.7981 103.651 91.3835 105.512 91.7529C107.372 92.1222 107 87.6901 106.256 86.9514C105.512 86.2127 97.6983 86.9514 95.4659 86.2127C93.2335 85.474 92.4893 83.6272 93.9776 82.5192C95.4659 81.4111 106.628 83.9966 106.628 80.6724C106.628 77.3483 102.907 78.4564 99.9307 78.8257C96.9542 79.1951 92.4893 78.087 92.8614 74.7629C93.2335 71.4387 107 76.6096 107 73.6548C107 70.7 102.163 70.3307 97.6983 69.9613C93.2335 69.592 92.4893 68.1146 93.2335 65.5292C93.9776 62.9437 103.651 67.7453 105.512 68.1146C107.372 68.484 107 63.6824 106.256 62.9437C105.512 62.205 97.3262 61.097 95.838 61.097C94.3497 61.097 91.7452 57.4035 93.2335 56.2955C94.7218 55.1874 107 61.4663 107 57.0342C107 53.71 97.3262 52.2326 95.838 51.8633C94.3497 51.4939 91.6615 50.9214 92.8614 48.5392C94.3497 45.5844 106.256 54.0794 106.256 49.2779C106.256 44.4763 95.4659 42.6296 94.3497 42.6296C93.2335 42.6296 92.4893 41.8909 92.4893 40.0441C95.4659 37.4587 101.047 40.7828 105.512 42.6296C105.512 38.1974 103.04 27.1175 92.4893 20.0993C92.4893 20.0993 75.5074 10.1274 61.9798 13.8204C56.0949 15.4269 56.77 22.8734 55.4158 25.6401C53.6569 29.2332 50.866 27.887 50.4456 26.0089C49.7014 22.6848 50.4458 16.7752 57.5151 13.8204C55.4315 13.2295 54.0422 13.4511 51.9338 13.8204C46.8737 16.4797 48.5852 28.5944 43.3762 29.3331C38.0184 30.515 43.3763 17.5139 48.9573 14.1898C47.9651 14.1898 45.2365 14.4114 42.26 15.2978C35.1907 21.2074 38.1673 29.7024 33.7024 30.4411C29.2376 31.1798 35.1907 18.9913 40.0276 15.2978C27.7493 15.2978 30.7259 30.8104 26.6331 32.2878C22.5404 33.7652 27.0052 21.5767 30.7259 17.8833C21.7963 18.2526 21.7963 32.6572 19.9359 33.0265C18.0756 33.3959 18.4476 30.0717 22.5404 21.9461C15.4711 24.5315 11.3784 35.9813 13.6108 41.5215C19.0678 40.5366 31.9165 38.1235 39.6555 36.3507C49.3293 34.1346 77.9787 35.2426 81.6994 36.3507C85.4201 37.4587 84.3038 40.0441 81.3273 40.7828C78.3508 41.5215 61.9797 40.0441 51.1897 40.0441C40.3997 40.0441 16.2152 45.5844 14.3549 45.9537C12.4946 46.3231 13.2387 49.6472 14.727 49.6472C16.2152 49.6472 36.679 46.6924 47.841 44.8457C59.003 42.9989 77.6066 44.8457 81.3273 45.5844C85.048 46.3231 83.9318 49.6472 81.3273 49.6472C78.7228 49.6472 57.1428 48.9085 48.2131 49.6472C39.2835 50.3859 16.9594 54.0794 14.727 54.0794C12.4946 54.0794 13.2387 58.5116 15.4711 58.1422C17.7035 57.7729 36.3069 55.5568 45.9807 54.0794C55.6544 52.602 79.467 54.0794 82.0714 54.8181C84.6759 55.5568 83.1876 58.8809 80.9552 58.8809C78.7228 58.8809 56.7707 58.1422 48.9573 58.1422C41.1439 58.1422 16.2152 62.9437 14.3549 63.6824C12.4946 64.4211 13.2387 67.0066 15.099 67.0066C16.9594 67.0066 37.7952 64.4211 46.7248 62.9437C55.6545 61.4663 80.5832 62.9437 82.4435 63.6824C84.3038 64.4211 83.5597 67.3759 81.6994 67.7453C79.839 68.1146 57.5148 66.6372 47.469 67.0066C37.4231 67.3759 15.8432 71.0694 14.3549 71.8081C12.8666 72.5468 13.2387 75.8709 14.727 75.8709C16.2152 75.8709 35.9349 73.6548 46.7248 71.8081C57.5148 69.9613 80.9552 72.1774 82.4435 72.5468C83.9318 72.9161 83.1876 76.2403 81.3273 76.6096C79.467 76.979 57.8869 76.2403 49.7014 76.6096C43.153 76.9051 23.6566 79.4413 14.727 80.6724C12.8666 81.0418 13.2387 85.8433 15.4711 85.1046C16.883 84.6374 33.7024 82.5192 47.469 80.6724C58.4822 79.1951 74.6301 80.5493 81.3273 81.4111C86.1642 82.5192 83.5597 86.2127 80.9552 86.2127C79.4212 86.2127 56.0266 84.7353 50.0735 85.1046C44.1204 85.474 16.2152 89.5368 14.3549 89.9062C12.4946 90.2755 13.9828 93.969 15.4711 93.969C16.9594 93.969 32.2142 91.7529 44.8645 89.9062C54.9847 88.4288 73.6379 89.2906 81.6994 89.9062C84.3038 90.2755 84.3039 94.7077 80.9552 94.3383C79.4761 94.1752 57.1428 93.5996 51.5618 93.969C45.9807 94.3383 15.8432 97.6625 14.3549 98.0318C12.8666 98.4012 13.9828 101.356 14.727 101.725C15.4711 102.094 27.3773 100.248 39.6555 98.7705C51.9338 97.2931 77.9787 98.4012 81.6994 99.5092C85.4201 100.617 83.5597 103.572 82.4435 103.572C81.3273 103.572 56.7707 102.094 50.0735 103.572C43.3762 105.049 17.3314 106.157 13.9828 106.526C14.1068 108.25 14.3549 112.141 14.3549 113.914C15.4711 113.914 15.7608 113.104 17.7035 121.67C18.7901 126.461 20.1644 128.936 22.5 131C25.3299 133.501 31 133 26 130.5C22.9117 128.956 18.5 119 18.0756 114.283C17.9432 112.811 21.7291 112.356 22.1683 114.652C23 119 27.5 129.5 31 131.5C34.5 133.5 38.3838 131.702 34.4466 129C30.5093 126.298 25.889 121.67 25.1449 114.652C24.7728 112.805 28.1214 112.067 28.8655 113.914C29.6097 115.76 31.5033 122.555 34.4466 125.732C36.5 127.948 38 129.5 41.5 131C45 132.5 48 131.5 45.2365 130.164C42.4731 128.829 33.7024 120.562 32.9583 114.652C32.5862 112.805 36.1788 111.395 37.051 113.914C41.1438 125.732 47.1469 129.053 50.0735 130.5C53 131.947 58 131.121 54.5384 129.795C51.0768 128.469 39.8245 120.275 41.1438 112.805C41.3365 111.714 44.1203 110.959 45.2365 112.436C46.3527 113.914 48.5 123 57.5 127.5C63.3097 130.405 68 131.205 66 127.5C60.419 125.284 51.5618 119.084 50.8176 111.697C50.4456 110.22 55.2825 110.22 56.3987 110.589C57.5149 110.959 59.8198 118.982 61.9798 120.562C69.0491 125.733 73 127.948 78.1119 126.84C82.1279 125.969 85.5533 130.532 80.3443 132.75C75.1354 134.967 54.9104 132.012 50.0735 135.706C45.2365 139.399 45.1312 146.048 47.9744 151.218C50.8176 156.389 50.9509 157.867 52.4392 158.605C53.9275 159.344 59.5085 161.56 59.1364 163.776C58.7644 165.992 55.4158 167.47 56.1599 171.533C56.4143 172.921 57.4076 176.338 58.6199 180.397" stroke="#FBE6EE" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </g>
                <defs>
                <filter id="filter0_d_2_7" x="-0.000213623" y="0.00012207" width="120" height="205" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
                <feOffset/>
                <feGaussianBlur stdDeviation="6"/>
                <feComposite in2="hardAlpha" operator="out"/>
                <feColorMatrix type="matrix" values="0 0 0 0 0.98 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0"/>
                <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_2_7"/>
                <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_2_7" result="shape"/>
                </filter>
                </defs>
            </svg>
{/* 
            <svg viewBox="0 0 533 791" fill="none" preserveAspectRatio='xMidYMax meet'>
                <path style={{strokeDashoffset: strokeDashoffset, strokeDasharray: strokeDasharray}} d="M268 237.275C383.324 220.627 498.06 251.675 524 338C585 541 268 509.5 268 634V790M268 237.275C136.844 256.209 4.92659 336.833 1.99998 468C0.490163 535.668 81 728 268 515V237.275ZM268 237.275V1" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg> */}
        </div>
    );
};

export default MicLine;
